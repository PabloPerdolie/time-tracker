basePath: /
definitions:
  handlers.Passport:
    properties:
      passportNumber:
        type: string
    type: object
  models.Task:
    properties:
      created_at:
        type: string
      description:
        type: string
      duration:
        type: string
      end_time:
        type: string
      id:
        type: integer
      start_time:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  models.User:
    properties:
      address:
        type: string
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      passport_number:
        type: string
      passport_series:
        type: string
      patronymic:
        type: string
      surname:
        type: string
      updated_at:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a sample server for a time tracking application.
  title: Time Tracker API
  version: "1.0"
paths:
  /tasks/end/{id}/{taskId}:
    post:
      consumes:
      - application/json
      description: End an existing task with the given details
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Task ID
        in: path
        name: taskId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Task'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: End a task
      tags:
      - tasks
  /tasks/start/{id}:
    post:
      consumes:
      - application/json
      description: Start a new task with the given details
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Task description
        in: body
        name: description
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Task'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Start a new task
      tags:
      - tasks
  /tasks/user/{id}:
    get:
      description: Get a list of tasks for a specific user within an optional date
        range
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Start date in YYYY-MM-DD format
        in: query
        name: start_date
        type: string
      - description: End date in YYYY-MM-DD format
        in: query
        name: end_date
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Task'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get tasks by user ID
      tags:
      - tasks
  /users:
    get:
      description: Get a list of users with optional filters
      parameters:
      - description: User surname
        in: query
        name: surname
        type: string
      - description: User name
        in: query
        name: name
        type: string
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "500":
          description: Error
          schema:
            additionalProperties: true
            type: object
      summary: Get users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create a new user with the given details
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handlers.Passport'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Create a new user
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update user details
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Update an existing user
      tags:
      - users
  /users/{id}:
    delete:
      description: Delete a user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User deleted
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Delete a user
      tags:
      - users
swagger: "2.0"
